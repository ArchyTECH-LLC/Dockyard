// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace ApiSdk.Models
{
    #pragma warning disable CS1591
    public class ScheduledJob : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The cron property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Cron { get; set; }
#nullable restore
#else
        public string Cron { get; set; }
#endif
        /// <summary>The error property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Error { get; set; }
#nullable restore
#else
        public string Error { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The lastExecution property</summary>
        public DateTimeOffset? LastExecution { get; set; }
        /// <summary>The lastJobState property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastJobState { get; set; }
#nullable restore
#else
        public string LastJobState { get; set; }
#endif
        /// <summary>The nextExecution property</summary>
        public DateTimeOffset? NextExecution { get; set; }
        /// <summary>The type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="ApiSdk.Models.ScheduledJob"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static ApiSdk.Models.ScheduledJob CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new ApiSdk.Models.ScheduledJob();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "cron", n => { Cron = n.GetStringValue(); } },
                { "error", n => { Error = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "lastExecution", n => { LastExecution = n.GetDateTimeOffsetValue(); } },
                { "lastJobState", n => { LastJobState = n.GetStringValue(); } },
                { "nextExecution", n => { NextExecution = n.GetDateTimeOffsetValue(); } },
                { "type", n => { Type = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("cron", Cron);
            writer.WriteStringValue("error", Error);
            writer.WriteStringValue("id", Id);
            writer.WriteDateTimeOffsetValue("lastExecution", LastExecution);
            writer.WriteStringValue("lastJobState", LastJobState);
            writer.WriteDateTimeOffsetValue("nextExecution", NextExecution);
            writer.WriteStringValue("type", Type);
        }
    }
}
